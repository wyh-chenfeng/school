# 配置根Logger 定义日志级别和输出的地方 语法 log4j.rootLogger = [ level ] , appenderName, appenderName, ...
#level=INFO,all can be output
# 这里是打印到控制台（console）和 每天一个文件（dailyFile）
# 定义INFO级别的日志:通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。比如在这里定 义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来
log4j.rootLogger = debug, console, dailyFile, rollingFile

# 配置日志信息输出目的地Appender

#设置输出地方console控制台输出 console is set to be a ConsoleAppender
log4j.appender.console = org.apache.log4j.ConsoleAppender
# 配置日志信息的格式 console have four patterns(模板)
#org.apache.log4j.HTMLLayout （以HTML表格形式布局）
#org.apache.log4j.PatternLayout （可以灵活地指定布局模式）
#org.apache.log4j.SimpleLayout （包含日志信息的级别和信息字符串）
#org.apache.log4j.TTCCLayout （包含日志产生的时间、线程、类别等等信息）
log4j.appender.console.layout = org.apache.log4j.PatternLayout
# 自定义输出格式 define the output type
log4j.appender.console.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

#配置输出dailyFile 每天产生一个日志文件
log4j.appender.dailyFile = org.apache.log4j.DailyRollingFileAppender
#the absolute route of the log4j file
#log4j.appender.dailyFile.File = /tmp/smarthome/express-web
# window 日志文件保存
log4j.appender.dailyFile.File = /logs/school-site/school-site.log
# Linux 日志文件保存
# log4j.appender.dailyFile.File = /opt/smarthome/logs/express-web/express-web.log
# 每天生成一个新文件 后缀名.log
log4j.appender.dailyFile.DatePattern='-'yyyy-MM-dd'.log'
# 将消息增加到指定文件中
log4j.appender.dailyFile.Append = true
# 设置日志信息格式  自定义
log4j.appender.dailyFile.layout = org.apache.log4j.PatternLayout
# 自定义格式
log4j.appender.dailyFile.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n


# 配置rollingFile 回滚文件
log4j.appender.rollingFile = org.apache.log4j.RollingFileAppender
# 指定日志信息的最低输出级别 只打印error级别或之上的信息
log4j.appender.rollingFile.Threshold = error
# 表示所有消息都会被立即输出
log4j.appender.rollingFile.ImmediateFlush = true
# 将消息增加到指定文件中
log4j.appender.rollingFile.Append = true
# window 日志文件保存
log4j.appender.rollingFile.File = /logs/school-site/school-site.log
# 日志文件到达该大小时，将会自动滚动，即将原来的内容移到logging.log4j.1文件中
log4j.appender.rollingFile.MaxFileSize = 500KB
# 指定可以产生的滚动文件的最大数，例如，设为2则可以产生logging.log4j.1，logging.log4j.2两个滚动文件和一个logging.log4j文件
log4j.appender.rollingFile.MaxBackupIndex = 20
# 配置日志文件的输出格式 自定义
log4j.appender.rollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} --> [%t] %l: %m %x %n


